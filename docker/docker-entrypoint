#!/usr/bin/dumb-init /bin/bash
#
# (c) 2018 Jared Allard <jaredallard@outlook.com>
#

SERVICE=$1
CMD=$2


# Enable service debugging
export DEBUG="media:*"

echo "Started: $(date)"
echo "opts: $@"

# Make sure the service exists.
if [[ -z "${SERVICE}" ]] || [[ ! -e "${SERVICE}" ]]; then
  echo "Service not found or not supplied"
  exit 1
fi

if [[ -z "$REDIS" ]]; then
  export REDIS="redis://media-redis:6379"
  echo "WARN: \$REDIS undefined, defaulting to prod config..."
fi

REDIS_HOST=`echo $REDIS | sed 's/redis:\/\///g' | awk -F ':' '{ print $1 }'`
REDIS_PORT=`echo $REDIS | awk -F ':' '{ print $3 }'`

echo "INFO: waiting for redis '$REDIS' ($REDIS_HOST:$REDIS_PORT)"
PING_RESPONSE=""
while [[ $PING_RESPONSE != "PONG" ]]; do
  PING_RESPONSE=`timeout 3 redis-cli -h $REDIS_HOST -p $REDIS_PORT PING`
  echo $PING_RESPONSE
  sleep 1
done
echo "INFO: redis is up"

# Bootstrap the configs
# Create the config directory
if [[ ! -d "./config" ]]; then
  mkdir ./config || exit 1
fi

# Check for kubernetes mounted secrets
if [[ ! -e "/mnt/config/config.yaml" ]]; then
  echo "WARN: Config not found at /mnt/config, using environment variable"

  if [[ -z "$CONFIG" ]]; then
    echo "ERROR: Config not defined."
    exit 2
  fi

  echo "INFO: inserting base64 decoded config into ./config/config.yaml"
  echo "$CONFIG" | base64 -d > ./config/config.yaml
else
  ln -svf /mnt/config/config.yaml ./config/config.yaml
fi


echo "INFO: bootstrap complete."
pushd "${SERVICE}" > /dev/null
  yarn install --verbose

  echo "cmd: $(pwd)"
  echo -n "exec: "
  if [[ -z "$CMD" ]]; then
    echo "node index.js"
    node index.js
  else
    echo "${CMD}"
    "$CMD"
  fi

popd > /dev/null
